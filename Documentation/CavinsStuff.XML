<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CavinsStuff</name>
    </assembly>
    <members>
        <member name="T:CavinsStuff.Extentions.DatatablesExtentions">
            <summary>
            Contains useful extentions with using the datatables plugin.
            </summary>
        </member>
        <member name="M:CavinsStuff.Extentions.DatatablesExtentions.OrderRecords``1(System.Linq.IQueryable{``0},CavinsStuff.Extentions.Models.DataTableParameters)">
            <summary>
            Handles the order of the items from the datatable parameters sent in the ajax post.
            </summary>
            <param name="items">Items displayed in the datatable.</param>
            <param name="datatableParameters">Datatable parameters set from ajax post.</param>
            <returns>Ordered items</returns>
        </member>
        <member name="M:CavinsStuff.Extentions.DatatablesExtentions.SearchRecords``1(System.Linq.IQueryable{``0},CavinsStuff.Extentions.Models.DataTableParameters)">
            <summary>
            Searchs the items using the datatable parameters sent in the ajax post.
            </summary>
            <param name="items">Items displayed in the datatable.</param>
            <param name="datatableParameters">Datatable parameters set from ajax post.</param>
            <returns>Filtered items</returns>
        </member>
        <member name="T:CavinsStuff.Extentions.ClientHelperExtenstions">
            <summary>
            Contains all client helper extentions.
            </summary>
        </member>
        <member name="M:CavinsStuff.Extentions.ClientHelperExtenstions.HandleResponse``1(System.Net.Http.HttpResponseMessage)">
            <summary>
            Handles the response from the server
            </summary>
        </member>
        <member name="T:CavinsStuff.Extentions.CollectionExtentions">
            <summary>
            Contains all collection extentions.
            </summary>
        </member>
        <member name="M:CavinsStuff.Extentions.CollectionExtentions.ToEnumerable``1(System.Data.DataTable)">
            <summary>
            Convert the contents of a <see cref="T:System.Data.DataTable"/> to an IEnumerable Object.
            </summary>
            <typeparam name="T">Type to cast <see cref="T:System.Data.DataTable"/>'s rows to</typeparam>
        </member>
        <member name="M:CavinsStuff.Extentions.CollectionExtentions.ToEnumerable``1(``0)">
            <summary>
            Creates an IEnumerable containing this object
            </summary>
            <typeparam name="T">Type of IEnumerable</typeparam>
            <param name="obj">Object to add to the IEnumerable</param>
            <returns></returns>
        </member>
        <member name="M:CavinsStuff.Extentions.CollectionExtentions.ToCollection``1(``0)">
            <summary>
            Creates an ICollection containing this object
            </summary>
            <typeparam name="T">Type of ICollection</typeparam>
            <param name="obj">Object to add to the IEnumerable</param>
            <returns></returns>
        </member>
        <member name="T:CavinsStuff.Extentions.DateExtentions">
            <summary>
            Contains all date extentions.
            </summary>
        </member>
        <member name="M:CavinsStuff.Extentions.DateExtentions.DefaultDatesIfNull(System.Nullable{System.DateTime}@,System.Nullable{System.DateTime}@,System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            Sets the dates to their defaults.
            </summary>
            <param name="defaultFromDate">Defaults to DateTime.MinValue if null</param>
            <param name="defaultToDate">Defaults to DateTime.MaxValue if null</param>
        </member>
        <member name="M:CavinsStuff.Extentions.DateExtentions.FirstDayOfYear(System.DateTime)">
            <summary>
            First day of given year
            </summary>
            <example>
            2017-02-21 13:12:32PM => 2017-01-01 13:12:32PM
            </example>
        </member>
        <member name="M:CavinsStuff.Extentions.DateExtentions.LastDayOfYear(System.DateTime)">
            <summary>
            Last day of given year
            </summary>
            <example>
            2017-02-21 13:12:32PM => 2017-12-31 13:12:32PM
            </example>
        </member>
        <member name="M:CavinsStuff.Extentions.DateExtentions.FirstDayOfMonth(System.DateTime)">
            <summary>
            First day of given month
            </summary>
            <example>
            2017-02-21 13:12:32PM => 2017-02-01 13:12:32PM
            </example>
        </member>
        <member name="M:CavinsStuff.Extentions.DateExtentions.LastDayOfMonth(System.DateTime)">
            <summary>
            Last day of given month. 
            NOTE: Includes Logic for leap years
            </summary>
            <example>
            2017-02-21 13:12:32PM => 2017-02-28 13:12:32PM
            </example>
        </member>
        <member name="M:CavinsStuff.Extentions.DateExtentions.StartOfDay(System.DateTime)">
            <summary>
            Start of the day
            </summary>
            <example>
            2017-02-21 13:12:32PM => 2017-02-21 12:00:00AM 
            </example>
        </member>
        <member name="M:CavinsStuff.Extentions.DateExtentions.EndOfDay(System.DateTime)">
            <summary>
            End of the day
            </summary>
            <example>
            2017-02-21 13:12:32PM => 2017-02-21 11:59:59PM  
            </example>
        </member>
        <member name="M:CavinsStuff.Extentions.DateExtentions.IsDayOfMonth(System.DateTime,System.Int32)">
            <summary>
            Checks if the date matches the day of the month
            </summary>
            <param name="date">Date</param>
            <param name="dayOfMonth">Day of the month as an <see cref="T:System.Int32"/></param>
        </member>
        <member name="M:CavinsStuff.Extentions.DateExtentions.IsDayOfMonth(System.DateTime,System.Int32[])">
            <summary>
            Checks if the date matches the day of the month
            </summary>
            <param name="date">Date</param>
            <param name="dayOfMonth">Day of the month as an <see cref="T:System.Int32"/></param>
        </member>
        <member name="M:CavinsStuff.Extentions.DateExtentions.DaysBetween(System.DateTime,System.DateTime)">
            <summary>
            Gets the amount of days between this date and the end Date
            </summary>
            <param name="date">Starting date</param>
            <param name="endDate">End date</param>
        </member>
        <member name="M:CavinsStuff.Extentions.DateExtentions.MonthsBetween(System.DateTime,System.DateTime)">
            <summary>
            Gets the amount of Months between this date and the end Date
            </summary>
            <param name="date">Starting date</param>
            <param name="endDate">End date</param>
        </member>
        <member name="M:CavinsStuff.Extentions.DateExtentions.YearsBetween(System.DateTime,System.DateTime)">
            <summary>
            Gets the amount of years between this date and the end Date
            </summary>
            <param name="date">Starting date</param>
            <param name="endDate">End date</param>
        </member>
        <member name="T:CavinsStuff.Extentions.NumberExtentions">
            <summary>
            Contains all int extentions.
            </summary>
        </member>
        <member name="M:CavinsStuff.Extentions.NumberExtentions.MapToNewRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Takes a value from a range and maps it to a value with the same postition in a new range.
            </summary>
            <example>
            Start Range: 0 - 100
            Value: 20		/// 
            New Range: 0 - 200
            Value: 40
            </example>
            <param name="originalRangeStart">Start of the Original Range</param>
            <param name="originalRangeEnd">End of the Original Range</param>
            <param name="newRangeStart">Start of the New Range</param>
            <param name="newRangeEnd">End of the New Range</param>
            <param name="value">Value to be mapped</param>
            <returns>Mapped int value</returns>
        </member>
        <member name="M:CavinsStuff.Extentions.NumberExtentions.ToCurrency(System.Decimal,System.String,System.Boolean)">
            <summary>
            Converts the decimal to a currency string. 
            eg:12345.234  = R 12 345.23
            </summary>
            <param name="value">Value to convert</param>
            <param name="symbol">Symbol to prepend</param>
            <returns></returns>
        </member>
        <member name="T:CavinsStuff.Helpers.ClientHelper">
            <summary>
            Used as a simplifer for using http client
            </summary>
        </member>
        <member name="M:CavinsStuff.Helpers.ClientHelper.Get``1(System.String)">
            <summary>
            Gets a response from the URL provided and deserializes the results to the specified type.
            </summary>
            <typeparam name="T">Type to deserialize results to.</typeparam>
            <param name="url">URL appended to the base to get results</param>
            <returns></returns>
        </member>
        <member name="M:CavinsStuff.Helpers.ClientHelper.PostToUrl``1(System.String)">
            <summary>
            Posts to a url with no body
            </summary>
            <typeparam name="T">Expected return Type</typeparam>
            <param name="url">Url to post to.</param>
        </member>
        <member name="M:CavinsStuff.Helpers.ClientHelper.PostJson``1(System.String,System.Object)">
            <summary>
            Posts to a url with a Json a body
            </summary>
            <typeparam name="T">Expected return Type</typeparam>
            <param name="url">Url to post to</param>
            <param name="requestObjectModel">Request Object Model to be converted into the Json body.</param>
            <returns>Type of T</returns>
        </member>
        <member name="M:CavinsStuff.Helpers.ClientHelper.BuildUrl(System.String,System.String[])">
            <summary>
            Appends string objects to url. Ignores null values
            </summary>
            <param name="url">Url to append values to.</param>
            <param name="urlParameters">String expected as Name=Value. Example: firstname=sam</param>
            <returns></returns>
        </member>
        <member name="M:CavinsStuff.Helpers.ClientHelper.TryAddWithoutValidation(System.String,System.String)">
            <summary>
            Adds the Header to the underling HttpClient
            </summary>
            <param name="name">Name of the header value</param>
            <param name="value">Value of the header</param>
        </member>
        <member name="T:CavinsStuff.Extentionsm.StringExtentions">
            <summary>
            Contains all string extentions.
            </summary>
        </member>
        <member name="M:CavinsStuff.Extentionsm.StringExtentions.Right(System.String,System.Int32)">
            <summary>
            Returns the specified length of characters starting from the right
            </summary>
            <param name="intialString"></param>
            <param name="length">Length of characters to return</param>
            <returns></returns>
        </member>
        <member name="M:CavinsStuff.Extentionsm.StringExtentions.ToBase64(System.Text.Encoding,System.String)">
            <summary>
            Returns the base64encoded text
            </summary>
            <param name="encoding"></param>
            <param name="text">Text to be encoded</param>
            <returns></returns>
        </member>
        <member name="M:CavinsStuff.Extentionsm.StringExtentions.IsNullOrEmpty(System.String)">
            <summary>
            Checks whether the string is null, string.Empty or whitespace 
            </summary>
        </member>
        <member name="M:CavinsStuff.Extentionsm.StringExtentions.IsGuid(System.String)">
            <summary>
            Checks whether the string can parse into a guid
            </summary>
        </member>
        <member name="M:CavinsStuff.Extentionsm.StringExtentions.ToGuid(System.String)">
            <summary>
            Tries to parse string to Guid
            </summary>
            <exception cref="T:System.InvalidCastException">Failed to cast string</exception>
        </member>
        <member name="M:CavinsStuff.Extentionsm.StringExtentions.ReplaceCI(System.String,System.String,System.String)">
            <summary>
            Performs a super fast case incensitive string replace
            </summary>
            <param name="original">The original string</param>
            <param name="pattern">The string to search for</param>
            <param name="replacement">The string that will replace the search string</param>
            <returns>The original text with all replacements done</returns>
        </member>
    </members>
</doc>
